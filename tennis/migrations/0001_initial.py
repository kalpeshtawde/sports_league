# Generated by Django 4.0.1 on 2022-01-24 06:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tennis.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('city', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('state', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('country', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('level', models.FloatField(blank=True, help_text='Level of the league', null=True)),
                ('description', models.CharField(blank=True, db_index=True, max_length=2000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('format', models.CharField(choices=[('single', 'Single'), ('double', 'Double'), ('mix_double', 'Mix Double')], default='single', max_length=64)),
                ('match_status', models.CharField(choices=[('completed', 'Completed'), ('draw', 'Draw'), ('cancelled', 'Cancelled'), ('pending', 'Pending')], db_index=True, default='single', max_length=64)),
                ('court', models.CharField(blank=True, db_index=True, max_length=2000, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tennis.league', to_field='league_id')),
                ('player_four', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_player_four', to=settings.AUTH_USER_MODEL, to_field='user_id')),
                ('player_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_player_one', to=settings.AUTH_USER_MODEL, to_field='user_id')),
                ('player_three', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_player_three', to=settings.AUTH_USER_MODEL, to_field='user_id')),
                ('player_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_player_two', to=settings.AUTH_USER_MODEL, to_field='user_id')),
                ('winner_one', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wone', to=settings.AUTH_USER_MODEL, to_field='user_id')),
                ('winner_two', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wtwo', to=settings.AUTH_USER_MODEL, to_field='user_id')),
            ],
        ),
        migrations.CreateModel(
            name='MatchSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_set_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('player_one_score', models.IntegerField(default=0)),
                ('player_two_score', models.IntegerField(default=0)),
                ('player_one_tb_score', models.IntegerField(default=0)),
                ('player_two_tb_score', models.IntegerField(default=0)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_set', to='tennis.match', to_field='match_id')),
            ],
        ),
        migrations.CreateModel(
            name='MatchRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_request_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('format', models.CharField(choices=[('single', 'Single'), ('double', 'Double'), ('mix_double', 'Mix Double')], default='single', max_length=64)),
                ('court', models.CharField(blank=True, db_index=True, max_length=2000, null=True)),
                ('match_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expiry_at', models.DateTimeField(default=tennis.models.MatchRequest.in_seven_days)),
                ('accepted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accepted_by_user', to=settings.AUTH_USER_MODEL, to_field='user_id')),
                ('league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tennis.league', to_field='league_id')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_by_user', to=settings.AUTH_USER_MODEL, to_field='user_id')),
            ],
        ),
        migrations.CreateModel(
            name='LeagueApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league_app_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=64)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league', to='tennis.league', to_field='league_id')),
                ('players', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leagueplayer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
